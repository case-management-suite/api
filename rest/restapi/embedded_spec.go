// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "the purpose of this application is to provide an application\nthat is using plain go code to define an API\n\nThis should demonstrate all the possible comment annotations\nthat are available to turn go code into a fully compliant swagger 2.0 spec",
    "title": "Petstore API.",
    "termsOfService": "there are no TOS at this moment, use at your own risk we take no responsibility",
    "contact": {
      "name": "John Doe",
      "url": "http://john.doe.com",
      "email": "john.doe@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "paths": {
    "/case": {
      "get": {
        "description": "This will show all available cases",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "summary": "Find all cases for the user",
        "operationId": "findCases",
        "responses": {
          "200": {
            "description": "CaseRecord",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CaseRecord"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "put": {
        "description": "This will show all available cases",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "summary": "Create a new case",
        "operationId": "createCase",
        "responses": {
          "200": {
            "description": "UUIDResponse",
            "schema": {
              "$ref": "#/definitions/UUIDResponse"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/case/{id}": {
      "get": {
        "description": "This will show the requested case",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "summary": "Find a given case",
        "operationId": "findCase",
        "parameters": [
          {
            "type": "string",
            "description": "case ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "CaseRecord",
            "schema": {
              "$ref": "#/definitions/CaseRecord"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "description": "This will execute a case",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "summary": "Execute an action on the given case",
        "operationId": "executeAction",
        "parameters": [
          {
            "type": "string",
            "description": "case ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "action",
            "name": "action",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "UUIDResponse",
            "schema": {
              "$ref": "#/definitions/UUIDResponse"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/case/{id}/actions": {
      "get": {
        "description": "This will retrieve actions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "summary": "Find the action records for a given case",
        "operationId": "getActionRecords",
        "parameters": [
          {
            "type": "string",
            "description": "case ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "CaseAction",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CaseAction"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    }
  },
  "definitions": {
    "CaseAction": {
      "x-go-package": "github.com/case-management-suite/models"
    },
    "CaseRecord": {
      "x-go-package": "github.com/case-management-suite/models"
    },
    "UUIDResponse": {
      "x-go-package": "github.com/case-management-suite/models"
    }
  },
  "responses": {
    "error": {
      "description": "",
      "headers": {
        "Code": {
          "type": "integer",
          "format": "int16"
        },
        "Message": {
          "type": "string"
        }
      }
    }
  },
  "x-meta-array": [
    "value1",
    "value2"
  ],
  "x-meta-array-obj": [
    {
      "name": "obj",
      "value": "field"
    }
  ],
  "x-meta-value": "value"
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "the purpose of this application is to provide an application\nthat is using plain go code to define an API\n\nThis should demonstrate all the possible comment annotations\nthat are available to turn go code into a fully compliant swagger 2.0 spec",
    "title": "Petstore API.",
    "termsOfService": "there are no TOS at this moment, use at your own risk we take no responsibility",
    "contact": {
      "name": "John Doe",
      "url": "http://john.doe.com",
      "email": "john.doe@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "paths": {
    "/case": {
      "get": {
        "description": "This will show all available cases",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "summary": "Find all cases for the user",
        "operationId": "findCases",
        "responses": {
          "200": {
            "description": "CaseRecord",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CaseRecord"
              }
            }
          },
          "default": {
            "description": "",
            "headers": {
              "Code": {
                "type": "integer",
                "format": "int16"
              },
              "Message": {
                "type": "string"
              }
            }
          }
        }
      },
      "put": {
        "description": "This will show all available cases",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "summary": "Create a new case",
        "operationId": "createCase",
        "responses": {
          "200": {
            "description": "UUIDResponse",
            "schema": {
              "$ref": "#/definitions/UUIDResponse"
            }
          },
          "default": {
            "description": "",
            "headers": {
              "Code": {
                "type": "integer",
                "format": "int16"
              },
              "Message": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/case/{id}": {
      "get": {
        "description": "This will show the requested case",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "summary": "Find a given case",
        "operationId": "findCase",
        "parameters": [
          {
            "type": "string",
            "description": "case ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "CaseRecord",
            "schema": {
              "$ref": "#/definitions/CaseRecord"
            }
          },
          "default": {
            "description": "",
            "headers": {
              "Code": {
                "type": "integer",
                "format": "int16"
              },
              "Message": {
                "type": "string"
              }
            }
          }
        }
      },
      "post": {
        "description": "This will execute a case",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "summary": "Execute an action on the given case",
        "operationId": "executeAction",
        "parameters": [
          {
            "type": "string",
            "description": "case ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "action",
            "name": "action",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "UUIDResponse",
            "schema": {
              "$ref": "#/definitions/UUIDResponse"
            }
          },
          "default": {
            "description": "",
            "headers": {
              "Code": {
                "type": "integer",
                "format": "int16"
              },
              "Message": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/case/{id}/actions": {
      "get": {
        "description": "This will retrieve actions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "summary": "Find the action records for a given case",
        "operationId": "getActionRecords",
        "parameters": [
          {
            "type": "string",
            "description": "case ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "CaseAction",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CaseAction"
              }
            }
          },
          "default": {
            "description": "",
            "headers": {
              "Code": {
                "type": "integer",
                "format": "int16"
              },
              "Message": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CaseAction": {
      "x-go-package": "github.com/case-management-suite/models"
    },
    "CaseRecord": {
      "x-go-package": "github.com/case-management-suite/models"
    },
    "UUIDResponse": {
      "x-go-package": "github.com/case-management-suite/models"
    }
  },
  "responses": {
    "error": {
      "description": "",
      "headers": {
        "Code": {
          "type": "integer",
          "format": "int16"
        },
        "Message": {
          "type": "string"
        }
      }
    }
  },
  "x-meta-array": [
    "value1",
    "value2"
  ],
  "x-meta-array-obj": [
    {
      "name": "obj",
      "value": "field"
    }
  ],
  "x-meta-value": "value"
}`))
}
