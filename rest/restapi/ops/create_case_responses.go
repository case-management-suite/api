// Code generated by go-swagger; DO NOT EDIT.

package ops

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	"github.com/case-management-suite/models"
)

// CreateCaseOKCode is the HTTP code returned for type CreateCaseOK
const CreateCaseOKCode int = 200

/*
CreateCaseOK UUIDResponse

swagger:response createCaseOK
*/
type CreateCaseOK struct {

	/*
	  In: Body
	*/
	Payload models.UUIDResponse `json:"body,omitempty"`
}

// NewCreateCaseOK creates CreateCaseOK with default headers values
func NewCreateCaseOK() *CreateCaseOK {

	return &CreateCaseOK{}
}

// WithPayload adds the payload to the create case o k response
func (o *CreateCaseOK) WithPayload(payload models.UUIDResponse) *CreateCaseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create case o k response
func (o *CreateCaseOK) SetPayload(payload models.UUIDResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCaseOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
CreateCaseDefault create case default

swagger:response createCaseDefault
*/
type CreateCaseDefault struct {
	_statusCode int
	/*

	 */
	Code int16 `json:"Code"`
	/*

	 */
	Message string `json:"Message"`
}

// NewCreateCaseDefault creates CreateCaseDefault with default headers values
func NewCreateCaseDefault(code int) *CreateCaseDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateCaseDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create case default response
func (o *CreateCaseDefault) WithStatusCode(code int) *CreateCaseDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create case default response
func (o *CreateCaseDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithCode adds the code to the create case default response
func (o *CreateCaseDefault) WithCode(code int16) *CreateCaseDefault {
	o.Code = code
	return o
}

// SetCode sets the code to the create case default response
func (o *CreateCaseDefault) SetCode(code int16) {
	o.Code = code
}

// WithMessage adds the message to the create case default response
func (o *CreateCaseDefault) WithMessage(message string) *CreateCaseDefault {
	o.Message = message
	return o
}

// SetMessage sets the message to the create case default response
func (o *CreateCaseDefault) SetMessage(message string) {
	o.Message = message
}

// WriteResponse to the client
func (o *CreateCaseDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Code

	code := swag.FormatInt16(o.Code)
	if code != "" {
		rw.Header().Set("Code", code)
	}

	// response header Message

	message := o.Message
	if message != "" {
		rw.Header().Set("Message", message)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
